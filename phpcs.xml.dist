<?xml version="1.0"?>
<ruleset>
    <arg name="basepath" value="."/>
    <arg name="extensions" value="php"/>
    <arg name="parallel" value="80"/>
    <arg name="cache" value=".phpcs-cache"/>
    <arg name="colors"/>

    <!-- Ignore warnings, show progress of the run and show sniff names -->
    <arg value="nps"/>

    <file>lib</file>
    <file>tests</file>

    <exclude-pattern>*/tests/Doctrine/Tests/ORM/Proxy/generated/*</exclude-pattern>
    <exclude-pattern>*/tests/Doctrine/Tests/Proxies/*</exclude-pattern>

    <rule ref="Doctrine">
        <exclude name="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly.ReferencedGeneralException"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.EarlyExit"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming"/>
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming"/>
    </rule>

    <rule ref="PSR1.Classes.ClassDeclaration.MultipleClasses">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <rule ref="Squiz.Classes.ClassFileName.NoMatch">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <rule ref="Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase">
        <exclude-pattern>lib/Doctrine/ORM/Events.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Tools/ToolEvents.php</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversablePropertyTypeHintSpecification">
        <exclude-pattern>lib/Doctrine/ORM/Annotation/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowEqualOperators.DisallowedNotEqualOperator">
        <exclude-pattern>lib/Doctrine/ORM/Internal/Hydration/AbstractHydrator.php</exclude-pattern>
    </rule>

    <rule ref="Generic.CodeAnalysis.EmptyStatement">
        <exclude-pattern>lib/Doctrine/ORM/Sequencing/TableGenerator.php</exclude-pattern>
    </rule>

    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <exclude-pattern>lib/Doctrine/ORM/Query/Parser.php</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.UnusedPrivateElements.WriteOnlyProperty">
        <exclude-pattern>lib/Doctrine/ORM/Mapping/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.UnusedPrivateElements.UnusedMethod">
        <exclude-pattern>lib/Doctrine/ORM/Mapping/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName">
        <exclude-pattern>lib/Doctrine/ORM/Annotation/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Commenting.EmptyComment">
        <exclude-pattern>lib/Doctrine/ORM/Cache/DefaultQueryCache.php</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming">
        <exclude-pattern>lib/Doctrine/ORM/EntityManagerInterface.php</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingPropertyTypeHint">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.UnusedPrivateElements.UnusedProperty">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversableParameterTypeHintSpecification">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.UnusedPrivateElements.WriteOnlyProperty">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversablePropertyTypeHintSpecification">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingTraversableReturnTypeHintSpecification">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <!-- intentionally without namespace -->
    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
        <exclude-pattern>tests/Doctrine/Tests/Models/Global/GlobalNamespaceModel.php</exclude-pattern>
        <exclude-pattern>tests/Doctrine/Tests/Models/DDC3231/DDC3231User1NoNamespace.php</exclude-pattern>
        <exclude-pattern>tests/Doctrine/Tests/Models/DDC3231/DDC3231User2NoNamespace.php</exclude-pattern>
    </rule>

    <!-- file with multiple namespaces confuses the sniff -->
    <rule ref="PSR2.Namespaces.UseDeclaration.UseAfterNamespace">
        <exclude-pattern>tests/Doctrine/Tests/ORM/Functional/Ticket/DDC2084Test.php</exclude-pattern>
    </rule>

    <!-- file with multiple namespaces confuses the sniff -->
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses.IncorrectlyOrderedUses">
        <exclude-pattern>tests/Doctrine/Tests/ORM/Functional/Ticket/DDC2084Test.php</exclude-pattern>
    </rule>

    <!-- intentionally empty blocks -->
    <rule ref="Generic.CodeAnalysis.EmptyStatement.DetectedForeach">
        <exclude-pattern>tests/Doctrine/Tests/ORM/Functional/Ticket/DDC1301Test.php</exclude-pattern>
        <exclude-pattern>tests/Doctrine/Tests/ORM/Functional/ExtraLazyCollectionTest.php</exclude-pattern>
    </rule>

    <!-- incrementally migrating to strict typing -->
    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingParameterTypeHint">
        <exclude-pattern>lib/Doctrine/ORM/Annotation/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Cache/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Configuration/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Event/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Internal/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Mapping/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Persisters/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Proxy/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Query/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Reflection/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Repository/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Sequencing/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Tools/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Utility/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Configuration.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/EntityNotFoundException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Events.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/NonUniqueResultException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/NoResultException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/OptimisticLockException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/ORMException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/ORMInvalidArgumentException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/PersistentObject.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/PessimisticLockException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/TransactionRequiredException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/UnexpectedResultException.php</exclude-pattern>
        <exclude-pattern>tests/*</exclude-pattern>
    </rule>

    <!-- incrementally migrating to strict typing -->
    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.MissingReturnTypeHint">
        <exclude-pattern>lib/Doctrine/ORM/Annotation/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Cache/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Configuration/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Event/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Internal/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Mapping/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Persisters/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Proxy/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Query/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Reflection/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Repository/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Sequencing/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Tools/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Utility/*</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Configuration.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/EntityNotFoundException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/Events.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/NonUniqueResultException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/NoResultException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/OptimisticLockException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/ORMException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/ORMInvalidArgumentException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/PersistentObject.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/PessimisticLockException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/TransactionRequiredException.php</exclude-pattern>
        <exclude-pattern>lib/Doctrine/ORM/UnexpectedResultException.php</exclude-pattern>
        <exclude-pattern>tests/*</exclude-pattern>
    </rule>
</ruleset>
