<?php

declare(strict_types=1);

namespace Doctrine\Tests\ORM\Functional\Ticket;

use Doctrine\Tests\OrmFunctionalTestCase;

final class GH7804 extends OrmFunctionalTestCase
{
    public static function setUpBeforeClass()
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
    }


    protected function setUp(): void
    {
        parent::setUp();

        $this->setUpEntitySchema([
            GH7804Entity::class
        ]);

        $entity = new GH7804Entity();
        $entity->title = 'foo';

        $this->_em->persist($entity);
        $this->_em->flush();
        $this->_em->clear();
    }

    public function testPositiveQuery(): void
    {
        $qb = $this->_em->createQueryBuilder();

        $result = $qb->from(GH7804Entity::class, 'a')
            ->select('a.title as t')
            ->addGroupBy('t')
            ->getQuery()
            ->getResult();

        self::assertEquals('foo', $result[0]['t']);
    }

    public function testQueryWithNew(): void
    {
        $qb = $this->_em->createQueryBuilder();

        $result = $qb->from(GH7804Entity::class, 'a')
            ->select(
                sprintf('new %s(a.title)', GH7804Dto::class)
            )
            ->getQuery()
            ->getResult();

        self::assertInstanceOf(GH7804Dto::class, $result[0]);
        self::assertEquals('foo', $result[0]->getTitle());
    }

    public function testQueryWithNewAlias(): void
    {
        $qb = $this->_em->createQueryBuilder();

        $result = $qb->from(GH7804Entity::class, 'a')
            ->select(
                sprintf('new %s(a.title as t)', GH7804Dto::class)
            )
            ->addGroupBy('t')
            ->getQuery()
            ->getResult();

        self::assertInstanceOf(GH7804Dto::class, $result[0]);
        self::assertEquals('foo', $result[0]->getTitle());
    }

    public function testQueryWithNewAndHidden(): void
    {
        $qb = $this->_em->createQueryBuilder();

        $result = $qb->from(GH7804Entity::class, 'a')
            ->select(
                sprintf('new %s(a.title)', GH7804Dto::class),
                'a.title as HIDDEN h1'
            )
            ->addGroupBy('h1')
            ->getQuery()
            ->getResult();

        var_dump($result);

        self::assertInstanceOf(GH7804Dto::class, $result[0]);
        self::assertEquals('foo', $result[0]->getTitle());
    }
}

/**
 * @Entity
 */
class GH7804Entity
{
    /**
     * @Id
     * @Column(type="integer")
     * @GeneratedValue
     */
    public $id;

    /** @Column */
    public $title;
}

final class GH7804Dto
{
    private $title;

    public function __construct($title)
    {
        $this->title = $title;
    }

    public function getTitle()
    {
        return $this->title;
    }
}
